theme_apa() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
plot.title = element_text(hjust = 0.5, size = 12, face = "bold",
margin = margin(10, 0, 10, 0)))
set.seed(4796)
distance <- data.frame(experimental = rnorm(150, mean = 0.98, sd=0.008),
control = rnorm(150, mean=1.00, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.4) +
geom_boxplot(width=0.1, fill="bisque") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
plot.title = element_text(hjust = 0.5, size = 12, face = "bold",
margin = margin(10, 0, 10, 0)))
set.seed(4796)
distance <- data.frame(experimental = rnorm(150, mean = 0.98, sd=0.008),
control = rnorm(150, mean=1.00, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE, fill = "grey") +
coord_flip() +
geom_hline(yintercept = 1, color = "black", size = 0.4, linetype="dashed") +
geom_boxplot(width=0.1, fill="white") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
plot.title = element_text(hjust = 0.5, size = 12, face = "bold",
margin = margin(10, 0, 10, 0)))
set.seed(4796)
distance <- data.frame(experimental = rnorm(150, mean = 0.98, sd=0.008),
control = rnorm(150, mean=1.00, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE, fill = "grey") +
coord_flip() +
geom_hline(yintercept = 1, color = "black", size = 0.4, linetype="dashed") +
geom_boxplot(width=0.1, fill="white") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none") +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold",
margin = margin(10, 0, 10, 0)))
set.seed(4796)
distance <- data.frame(experimental = rnorm(150, mean = 0.98, sd=0.008),
control = rnorm(150, mean=1.00, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE, fill = "grey") +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.4, linetype="dashed") +
geom_boxplot(width=0.1, fill="bisque") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none") +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold",
margin = margin(10, 0, 10, 0)))
set.seed(4796)
distance <- data.frame(experimental = rnorm(150, mean = 0.98, sd=0.008),
control = rnorm(150, mean=1.00, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.4, linetype="dashed") +
geom_boxplot(width=0.1, fill="bisque") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none") +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold",
margin = margin(10, 0, 10, 0)))
set.seed(4796)
distance <- data.frame(experimental = rnorm(150, mean = 0.98, sd=0.008),
control = rnorm(150, mean=1.00, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.7, linetype="dashed") +
geom_boxplot(width=0.1, fill="bisque") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none") +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold",
margin = margin(10, 0, 10, 0)))
set.seed(4796)
distance <- data.frame(experimental = rnorm(150, mean = 0.98, sd=0.008),
control = rnorm(150, mean=1.00, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.7, linetype="dashed") +
geom_boxplot(width=0.1, fill="bisque") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
plot.title = element_text(hjust = 0.5, size = 12, face = "bold",
margin = margin(10, 0, 10, 0)))
png(filename = "apagraph1.png")
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.7, linetype="dashed") +
geom_boxplot(width=0.1, fill="bisque") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
plot.title = element_text(hjust = 0.5, size = 12, face = "bold",
margin = margin(10, 0, 10, 0)))
dev.off()
?png
png(filename = "apagraph1.png", 960, 480)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.7, linetype="dashed") +
geom_boxplot(width=0.1, fill="bisque") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
plot.title = element_text(hjust = 0.5, size = 12, face = "bold",
margin = margin(10, 0, 10, 0)))
dev.off()
png(filename = "apagraph1.png", 640, 480)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.7, linetype="dashed") +
geom_boxplot(width=0.1, fill="bisque") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
plot.title = element_text(hjust = 0.5, size = 12, face = "bold",
margin = margin(10, 0, 10, 0)))
dev.off()
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE, fill = "white") +
coord_flip() +
geom_hline(yintercept = 1, color = "black", size = 0.7, linetype="dashed") +
geom_boxplot(width=0.1, fill="white") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
plot.title = element_text(hjust = 0.5, size = 12, face = "bold",
margin = margin(10, 0, 10, 0)))
mo <- read.csv("senior_moralityscore.csv")
theme_set(theme_apa(base_size = 12))
qplot(score, data = mo, fill = condition,
main = "Morality Judgment", ylab = "Number of responses")
mo$score <- as.integer(mo$score)
mo$condition <- factor(mo$condition, c("experimental", "control"))
theme_set(theme_gray(base_size = 20))
qplot(score, data = mo, fill = condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_gray(base_size = 12))
qplot(score, data = mo, fill = condition,
main = "Morality Judgment", ylab = "Number of responses")
mo$score <- as.factor(mo$score)
mo$condition <- factor(mo$condition, c("experimental", "control"))
theme_set(theme_gray(base_size = 12))
qplot(score, data = mo, fill = condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_apa(base_size = 12))
qplot(score, data = mo, fill = condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_apa())
qplot(score, data = mo, fill = condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_apa(legend.pos = "none"))
qplot(score, data = mo, fill = condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_classic(legend.pos = "none"))
qplot(score, data = mo, fill = condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_apa(legend.pos = "none"))
qplot(score, data = mo, fill = condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_grey(legend.pos = "none"))
qplot(score, data = mo, fill = condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_grey())
qplot(score, data = mo, fill = condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_apa(legend.pos = "none"))
qplot(score, data = mo, fill = condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_apa(legend.pos = "none"))
qplot(score, data = mo, fill = condition,
ylab = "Number of responses")
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.6, linetype="dashed") +
geom_boxplot(width=0.1, fill="bisque") +
labs(x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
plot.title = element_text(hjust = 0.5, size = 12, face = "bold",
margin = margin(10, 0, 10, 0)))
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.6, linetype="dashed") +
geom_boxplot(width=0.1, fill="bisque") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
plot.title = element_text(hjust = 0.5, size = 12, face = "bold",
margin = margin(10, 0, 10, 0)))
install.packages("ggthemes")
quit()
png("newgraph1.png", 960, 480)
library(ggplot2)
library(tidyr)
library(RColorBrewer)
library(dplyr)
library(jtools)
set.seed(4796)
distance <- data.frame(control = rnorm(150, mean=1.00, sd=0.008),
experimental = rnorm(150, mean = 0.98, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.4) +
geom_boxplot(width=0.1, fill="bisque") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none"))
dev.off
dev.off()
set.seed(4796)
distance <- data.frame(control = rnorm(150, mean=1.00, sd=0.008),
experimental = rnorm(150, mean = 0.98, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.4) +
geom_boxplot(width=0.1, fill="bisque") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none"))
set.seed(4796)
distance <- data.frame(control = rnorm(150, mean=1.00, sd=0.008),
experimental = rnorm(150, mean = 0.98, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.4) +
geom_boxplot(width=0.1, fill="bisque") +
labs(title = "Reach Ability Estimation",
x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none")
set.seed(4796)
distance <- data.frame(Control = rnorm(150, mean=1.00, sd=0.008),
Experimental = rnorm(150, mean = 0.98, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.4) +
geom_boxplot(width=0.1, fill="bisque") +
labs(x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none")
png("newgraph1.png", 960, 480)
set.seed(4796)
distance <- data.frame(Control = rnorm(150, mean=1.00, sd=0.008),
Experimental = rnorm(150, mean = 0.98, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.4) +
geom_boxplot(width=0.1, fill="bisque") +
labs(x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none")
dev.off()
set.seed(4796)
distance <- data.frame(Control = rnorm(150, mean=1.00, sd=0.008),
Experimental = rnorm(150, mean = 0.98, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
xlim(0.5, 1.5)
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.4) +
geom_boxplot(width=0.1, fill="bisque") +
labs(x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none")
set.seed(4796)
distance <- data.frame(Control = rnorm(150, mean=1.00, sd=0.008),
Experimental = rnorm(150, mean = 0.98, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
ylim(0.5, 1.5)
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.4) +
geom_boxplot(width=0.1, fill="bisque") +
labs(x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none")
set.seed(4796)
distance <- data.frame(Control = rnorm(150, mean=1.00, sd=0.008),
Experimental = rnorm(150, mean = 0.98, sd=0.008))
dis <- gather(distance, condition, distance, 1:2)
dis$condition <- as.factor(dis$condition)
d <- ggplot(dis, aes(x=condition, y=distance, fill = condition))
d + geom_violin(trim = FALSE) +
coord_flip() +
scale_fill_brewer(palette="Dark2") +
geom_hline(yintercept = 1, color = "blue", size = 0.4) +
geom_boxplot(width=0.1, fill="bisque") +
labs(x = "Condition", y = "Average Ratio") +
theme_apa(legend.pos = "none")
mo <- read.csv("senior_moralityscore.csv")
mo$score <- as.factor(mo$score)
View(mo)
View(mo)
names(mo)
names(mo) <- c("X", "Condition", "Score")
theme_set(theme_apa(legend.pos = "topleft"))
qplot(score, data = mo, fill = condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_apa(legend.pos = "topleft"))
qplot(Score, data = mo, fill = Condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_apa(legend.pos = "topright"))
qplot(Score, data = mo, fill = Condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_apa(legend.pos = "topleft"))
qplot(Score, data = mo, fill = Condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_apa(legend.pos = "topleft", cex = 0.75))
qplot(Score, data = mo, fill = Condition,
main = "Morality Judgment", ylab = "Number of responses")
png("newgraph2.png")
theme_set(theme_apa(legend.pos = "topleft", cex = 0.75))
qplot(Score, data = mo, fill = Condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_apa(legend.pos = "topleft")
qplot(Score, data = mo, fill = Condition,
main = "Morality Judgment", ylab = "Number of responses")
dev.off()
png("newgraph2.png")
theme_set(theme_apa(legend.pos = "topleft")
qplot(Score, data = mo, fill = Condition,
main = "Morality Judgment", ylab = "Number of responses")
theme_set(theme_apa()
qplot(Score, data = mo, fill = Condition, ylab = "Number of responses")
theme_set(theme_apa())
qplot(Score, data = mo, fill = Condition, ylab = "Number of responses")
dev.off()
names(mo) <- c("X", "condition", "score")
mo$score <- as.integer(mo$score)
mo$condition <- factor(mo$condition, c("experimental", "control"))
mSummary <- mo %>%
group_by(condition) %>%
summarize(meanscore = mean(score),
se = sqrt(var(score)/length(score)))
m <- ggplot(data=mSummary, aes(x=condition, y=meanscore))
m + geom_bar(stat="identity", width = 0.5, aes(fill = condition)) +
scale_fill_brewer(palette = "Set2") +
geom_text(aes(label= round(meanscore,2)),
position = position_stack(vjust=0.5), color= "black", size = 6.5) +
coord_flip() +
geom_errorbar(aes(ymin=meanscore-se, ymax=meanscore+se), width=0.2) +
theme_apa(legend.pos = "none") +
labs(x = "Condition", y = "Mean rating")
png("newgraph.png")
mo$score <- as.integer(mo$score)
mo$condition <- factor(mo$condition, c("experimental", "control"))
mSummary <- mo %>%
group_by(condition) %>%
summarize(meanscore = mean(score),
se = sqrt(var(score)/length(score)))
m <- ggplot(data=mSummary, aes(x=condition, y=meanscore))
m + geom_bar(stat="identity", width = 0.5, aes(fill = condition)) +
scale_fill_brewer(palette = "Set2") +
geom_text(aes(label= round(meanscore,2)),
position = position_stack(vjust=0.5), color= "black", size = 6.5) +
coord_flip() +
geom_errorbar(aes(ymin=meanscore-se, ymax=meanscore+se), width=0.2) +
theme_apa(legend.pos = "none") +
labs(x = "Condition", y = "Mean rating")
dev.off()
png("newgraph.png", 640, 480)
mo$score <- as.integer(mo$score)
mo$condition <- factor(mo$condition, c("experimental", "control"))
mSummary <- mo %>%
group_by(condition) %>%
summarize(meanscore = mean(score),
se = sqrt(var(score)/length(score)))
m <- ggplot(data=mSummary, aes(x=condition, y=meanscore))
m + geom_bar(stat="identity", width = 0.5, aes(fill = condition)) +
scale_fill_brewer(palette = "Set2") +
geom_text(aes(label= round(meanscore,2)),
position = position_stack(vjust=0.5), color= "black", size = 6.5) +
coord_flip() +
geom_errorbar(aes(ymin=meanscore-se, ymax=meanscore+se), width=0.2) +
theme_apa(legend.pos = "none") +
labs(x = "Condition", y = "Mean rating")
dev.off
dev.off()
getwd()
setwd("RepData_PeerAssessment1")
library(lattice)
library(dplyr)
data$date <- as.Date(data$date, format = "%Y-%m-%d")
knitr::knit2html()
?as.data.frame
missing <- tapply(data$steps, data$date, function(x) sum(is.na(x)))
unzip("activity.zip", exdir = "activity")
data <- read.csv("activity/activity.csv", na.strings = "NA")
data$date <- as.Date(data$date, format = "%Y-%m-%d")
StepPerDay=aggregate(data$steps, list(Date = data$date), sum, na.rm = TRUE)
hist(StepPerDay$x,
xlab = "Number of Steps per Day",
main = "Histogram of Number of Steps per Day",
breaks = 10,
col = "salmon")
data.frame(Mean = mean(StepPerDay$x, na.rm = TRUE),
Median = median(StepPerDay$x, na.rm = TRUE))
StepPerInterval = aggregate(list(steps = data$steps),
by = list(interval = data$interval),
FUN = mean,
na.rm = TRUE)
plot(StepPerInterval$steps ~ StepPerInterval$interval,
xlab = "Interval",
ylab = "Average Number of Steps",
col = "blue",
type = "l")
temp <- round(StepPerInterval[which.max(StepPerInterval$steps),])
sum(is.na(data$steps))
missing <- tapply(data$steps, data$date, function(x) sum(is.na(x)))
as.data.frame(subset(missing, missing > 0), optional = TRUE)
missing <- tapply(data$steps, data$date, function(x) sum(is.na(x)))
as.data.frame.table(subset(missing, missing > 0))
missing <- tapply(data$steps, data$date, function(x) sum(is.na(x)))
as.data.frame.data.frame(subset(missing, missing > 0))
missing <- tapply(data$steps, data$date, function(x) sum(is.na(x)))
as.data.frame(subset(missing, missing > 0))
unlist(missing)
unclass(missing)
missing <- tapply(data$steps, data$date, function(x) sum(is.na(x)))
as.data.frame(unlist(subset(missing, missing > 0)))
missing <- tapply(data$steps, data$date, function(x) sum(is.na(x)))
as.data.frame.matrix(subset(missing, missing > 0))
missing <- tapply(data$steps, data$date, function(x) sum(is.na(x)))
missingvalue <- subset(missing, missing > 0)
as.data.frame(missingvalue)
missing <- tapply(data$steps, data$date, function(x) sum(is.na(x)))
missing <- subset(missing, missing > 0)
as.data.frame(missing)
missing <- tapply(data$steps, data$date, function(x) sum(is.na(x)))
missing <- subset(missing, missing > 0)
as.data.frame(missing)
knitr::knit2html("PA1_template.Rmd")
